---
- name: Launches a new instance

  hosts: all 

  gather_facts: no
  
  tasks:

  - set_fact: aws_region=us-east-2
  - set_fact: iam_role=EC2_Admin 
  - set_fact: ami_to_use=ami-dda36dbf
  - set_fact: key_to_use=ec2-ocp.pem
  - set_fact: subnet_to_use=subnet-a49aa4e9
  - set_fact: sg_to_use=sg-6ef3a405

  - debug: var=instance_name
  - debug: var=instance_type
  - debug: var=disk_size

  - name: Launch the instance
    ec2:
      assign_public_ip: no
      count: 1
      image: "{{ ami_to_use }}"
      instance_profile_name: "{{ iam_role }}"
      instance_type: "{{ instance_type }}"
      group_id: "{{ sg_to_use }}"
      key_name: "{{ key_to_use }}"
      region: us-east-2
      state: present
      vpc_subnet_id: "{{ subnet_to_use }}"
      volumes:
        - device_name: /dev/sda1
          volume_type: gp2
          volume_size: "{{ disk_size }}"
          delete_on_termination: true
      instance_tags:
        Name: "{{ instance_name }}"
        Creator: Ansible
        Purpose: "Instance created by Ansible from {{ ami_to_use }}"
    register: ec2_instance
    failed_when: false

  - name: Get the root volume_id
    ec2_vol:
      instance: "{{ ec2_instance.instances[0].id }}"
      device_name: /dev/sda1
#      region: us-east-2
    register: ec2_vol

  - name: Tag the boot EBS volume
    ec2_tag:
      region: us-east-2
      resource: "{{ ec2_vol.volume_id }}"
      tags:
        Name: "{{ instance_name }}-boot"

  - name: Grab EC2 instance facts
    ec2_instance_facts:
      region: us-east-2
      instance_ids:
       - "{{ ec2_instance.instances[0].id }}"
    register: instance_facts

  - name: Wait for 22 to start listening 
    wait_for:
      port: 22
      host: "{{ instance_facts.instances[0].network_interfaces[0].association.public_ip }}"
    msg: "Timeout waiting for 22 to respond"
